@using Tameenk.Resources.UserTicket
@using Tameenk.Core.Domain.Enums
@using Tameenk.Models
@model Tameenk.Models.UserTicketViewModel
@{
    ViewBag.Title = Tameenk.LangText.Tickets;
}

<style>
    .class {
        color: darkred;
    }

    .ticketTypes {
        width: 100%;
        height: 50px;
        border-radius: 7px;
        border: 1px solid;
        background: white !important;
    }

    .newTick {
        /*margin: 20px;*/
        background: #24799e;
        border-radius: 11px;
        color: white;
        font-size: 20px;
    }

    /* The Close Button */


    .closeticketModal:hover,
    .closeticketModal:focus {
        color: #000;
        text-decoration: none;
        cursor: pointer;
    }

    .beltWhite {
        float: right !important;
        margin-left: 10px;
    }

    .not-active {
        pointer-events: none;
    }

    .isDisabled {
        color: currentColor;
        cursor: not-allowed;
        opacity: 0.5;
        text-decoration: none;
    }

    .modal {
        display: none; /* Hidden by default */
        position: fixed; /* Stay in place */
        z-index: 1; /* Sit on top */
        padding-top: 100px; /* Location of the box */
        left: 0;
        top: 0;
        width: 100%; /* Full width */
        height: 100%; /* Full height */
        overflow: auto; /* Enable scroll if needed */
        background-color: rgb(0,0,0); /* Fallback color */
        background-color: rgba(0,0,0,0.4); /* Black w/ opacity */
    }

    /* Modal Content */
    .modal-content {
        /* background-color: #fefefe; */
        margin: auto;
        /* padding: 20px; */
        border: 1px solid #888;
        width: 58%;
    }

    /* The Close Button */
    .close {
        color: #aaaaaa;
        float: right;
        font-size: 28px;
        font-weight: bold;
    }

    .userTicketModal {
        width: 41%;
    }

    .close:hover,
    .close:focus {
        color: #000;
        text-decoration: none;
        cursor: pointer;
    }

    .containerModall {
        background-color: white;
        width: 800px;
        margin: 0 auto;
        text-align: center;
        /* margin-top: 100px; */
        border-radius: 20px;
        /* max-width:90%; */
    }

    .addAttchClass {
        background: #24799e;
        color: white;
        width: 120px;
        padding: 10px;
        border-radius: 10px;
        text-align: center;
        margin: 10px 0px 10px 0px;
    }

    .attchContainer {
        margin: 5px 0px 7px 0px;
        box-shadow: 2px 3px 10px 0px #80808057;
        padding: 10px;
    }

    .headerModall {
        height: 100px;
        display: flex;
        align-items: center;
        justify-content: center;
    }

    .footerModall {
        padding: 20px 0px;
    }

    .bodyModall {
        background-color: #ffff !important;
        border-radius: 10px;
        margin: 0px 40px;
        max-height: 600px;
        color: rgb(59, 59, 59) !important;
        font-size: 16px;
        direction: rtl;
        padding: 10px 10px 20px 0px;
        text-align: right;
    }

    .close {
        float: left;
        font-size: 28px;
        font-weight: bold;
    }

        .close:hover,
        .close:focus {
            color: rgb(216, 7, 7);
            text-decoration: none;
            cursor: pointer;
        }

    p {
        margin: 30px 0px 50px 0px;
    }

    a:hover {
        color: #FB9C65 !important;
    }


    .row {
        margin: 0 !important;
    }


    .funcButtons {
        background-color: #FFBC39;
        border: none;
        color: white;
        text-align: center;
        text-decoration: none;
        display: inline-block;
        font-size: 18px;
        margin: 4px 2px;
        cursor: pointer;
        padding: 14px 40px;
    }

    .wrapper-bx {
        padding-left: 0px !important;
    }

    .btnModall {
        top: -30px;
        position: absolute;
        left: 10px;
        border: none;
        color: #FAA62F;
        text-align: center;
        text-decoration: none;
        display: inline-flex;
        font-size: 18px;
        /* margin: 4px 2px; */
        cursor: pointer;
        /* padding: 14px 40px; */
    }
</style>

<!-- Ticket Modal -->
<div id="ticketModal" class="modal">

    <!-- Modal content -->
    <div class="modal-content userTicketModal">
        <div id="ticketForm" class="containerModall">
        </div>
    </div>

</div>

<section class="section profile-view min-height-vh">
    <div>
        @Html.Partial("~/Views/Home/SideBar.cshtml", EProfileSection.UserTickets)

        <!-- My Tickets begains -->
        <div class="active content col-xs-12 col-md-9 col-lg-10 content-view " id="tickets">
            <div class="pd-inside">
                <h1 class="txt-lr txt-black md-mar-bot md-mar col-xs-12">@Html.Raw(Tameenk.LangText.Tickets)</h1>
                <div class="col-xs-12 col-sm-12 col-lg-12 addButtonNewTicket">
                    <button id="newTicket" class="btn btn-primary newTick">@Html.Raw(Tameenk.LangText.Profile_AddTicket)</button>
                </div>
                <article id="UserTicketList">
                    @foreach (var ticket in Model.Tickets)
                    {
                        @Html.Partial("_UserTicketHistoryItem", ticket)
                    }
                </article>
            </div>
            <!-- pd inside -->
        </div>
        <!-- My Tickets Ends -->
    </div>
</section>

@section Scripts
{
    <script>

// Get the ticketModal
var ticketModal = document.getElementById("ticketModal");

// Get the button that opens the modal
var newTicketbtn = document.getElementById("newTicket");


// When the user clicks the button, open the modal
newTicketbtn.onclick = function() {
        $("#ticketForm").html(`@Html.Partial("_NewTicketModalBody")`);
  ticketModal.style.display = "block";
}

function closeTicketModal(){
  ticketModal.style.display = "none";
}
            function GetExtraDataForUserTicketPopup()
            {
                    $("#createTicket").prop('disabled', true);
                    //$("#extraDataDiv").hide();
                    $("#sequenceOrCustomCardNumberDiv").hide();
                    $("#ninDiv").hide();
                    $("textarea#ticketNotes").val("");
                    $("#nin").val("");
                    $("#sequenceOrCustomCardNumber").val("");

                    var userTicketType = $("#ticketType").val();
                    if(userTicketType == null || userTicketType == 0)
                        return;

                    if(userTicketType == @((int)EUserTicketTypes.LinkWithNajm) || userTicketType == @((int)EUserTicketTypes.CouldnotPrintPolicy))
                    {
                        $("textarea#ticketNotes").val("");
                        $("#attchmentHolderDiv").hide();
                        $("#userNotesHolderDiv").hide();
                    }
                    else
                    {
                        $("#attchmentHolderDiv").show();
                        $("#userNotesHolderDiv").show();
                    }

                    if(userTicketType == @((int)EUserTicketTypes.LinkWithNajm) || userTicketType == @((int)EUserTicketTypes.ChangePolicyData) 
                        || userTicketType == @((int)EUserTicketTypes.CouldnotPrintPolicy) || userTicketType == @((int)EUserTicketTypes.PolicyGeneration))
                    {
                        $("#sequenceOrCustomCardNumberDiv").show();
                        return;
                    }
                    else if(userTicketType == @((int)EUserTicketTypes.Others))
                    {
                        $("#sequenceOrCustomCardNumberDiv").show();
                        $("#createTicket").prop('disabled', false);
                        return;
                    }
                    else if(userTicketType == @((int)EUserTicketTypes.NationalAddress))
                    {
                        $("#ninDiv").show();
                        $("#attchmentHolderDiv").hide();
                        $("#createTicket").prop('disabled', false);
                        return;
                    }
            }

            function validateExtraData(objectIdThatFiredTheFunction){
                var userTicketType = $("#ticketType").val();
                if(userTicketType == 1 || userTicketType == 2 || userTicketType == 3 || userTicketType == 4)
                {
                    var extraData = "";// $("#extraDataList").val();
                    var sequenceOrCustomCardNumber = $("#sequenceOrCustomCardNumber").val();

                    if(objectIdThatFiredTheFunction == "extraDataList" && sequenceOrCustomCardNumber != "")
                    {
                        $("#sequenceOrCustomCardNumber").val("");
                    }
                    else if(objectIdThatFiredTheFunction == "sequenceOrCustomCardNumber" && extraData != "")
                    {
                        $("#extraDataList").val("");
                    }
        
                    
                    if ((extraData == "" || extraData < 1) && sequenceOrCustomCardNumber == ""){
                        $("#createTicket").prop('disabled', true);
                    }
                    else{
                        $("#createTicket").prop('disabled', false);

                    }
                }
            }

            function validateTicketNotes(){
                var ticketNotes = $("textarea#ticketNotes").val();
                if(ticketNotes.length == 0){
                    $("#ticketNotesValidation").text("@UserTicketResources.Required");
                    $("#ticketNotesValidation").show();
            return false;
                }
                else if(ticketNotes.length > 200){
                     $("#ticketNotesValidation").text("@string.Format(UserTicketResources.UserNotesMaxLength, 200)");
                    $("#ticketNotesValidation").show();
            return false;

                }
                else{$("#ticketNotesValidation").hide();
                return true;

            }
            }

            function CreateTicket(){
            $("#createTicket").html("@UserTicketResources.SubmittingTicketLoading <i class=\"fas fa-spinner fa-spin\"></i>");
            $("#createTicket").prop('disabled', true);

                var ticketType = $("#ticketType").val();
                var ninValue = $("#nin").val();
                var extraData = "";//$("#extraDataList").val();
                var sequenceOrCustomCardNumber = $("#sequenceOrCustomCardNumber").val();

                if(ticketType == 6){ //National Address
                    var ninValue = $("#nin").val();
                    if (ninValue.length == 0)
                    {
                        $("#ninValidation").text("@UserTicketResources.Required");
                        $("#ninValidation").show();
                        $("#createTicket").prop('disabled', false);
                        $("#createTicket").text("@UserTicketResources.SubmitTicket");
                        return;
                    }
                }

                var isTicketNotesValid = true;
                if(ticketType != @((int)EUserTicketTypes.LinkWithNajm) && ticketType != @((int)EUserTicketTypes.CouldnotPrintPolicy))
                {isTicketNotesValid = validateTicketNotes();}

                if(!isTicketNotesValid){
                    $("#createTicket").prop('disabled', false);
                    $("#createTicket").text("@UserTicketResources.SubmitTicket");
                    return;
                }
                var ticketNotes = $("textarea#ticketNotes").val();

                var formData = new FormData();
                var attachmentFiles = $('.attchContainer').length;
                for (var i = 0; i < attachmentFiles; i++) {
                  var files = $("#userTicketFile"+i).get(0).files;
                  formData.append("file"+i, files[0]);
                }

                formData.append("userTicketType", ticketType);
                formData.append("extraData", '');
                formData.append("nin", ninValue || '');
                formData.append("sequenceOrCustomCardNumber", sequenceOrCustomCardNumber|| '');
                formData.append("userNotes", ticketNotes);


            $.ajax({
                    url: "@Url.Action("CreateUserTicket", "Profile")",
                    type: "POST",
                    data: formData,
                    cache: false,
                    contentType: false,
                    processData: false,
                    success: function (response) {
                        $("#createTicket").hide();
                        if(response != null && response.code == 1)
                        {
                             $("#ticketModalTitle").text("@UserTicketResources.PopupTicketCreated");
                             $("#ticketModalBody").html(response.description);
                             $("#UserTicketList").prepend(response.data);
                             $("#ProfileNotificationList").prepend(response.notification);
                        }
                        else{
                             $("#ticketModalTitle").text("@UserTicketResources.PopupTicketCreationFailed");
                             $("#ticketModalBody").html(response.description);
                        }
                    }
            });

            }


function AddAttachment(){
    var numItems = $('.attchContainer').length;
    console.log(numItems);
    if(numItems <=4)
        {
        $('#AttachmentsDiv').append(`<div class="attchContainer"><label>@UserTicketResources.AttachmentName:</label>  <input type="file" style="display:inline-block" name="userTicketFile" id="userTicketFile" /> </div>`);
         $('#userTicketFile').attr("name", "userTicketFile"+numItems);
         $('#userTicketFile').attr("id", "userTicketFile"+numItems);

        }
    }
    </script>
}
