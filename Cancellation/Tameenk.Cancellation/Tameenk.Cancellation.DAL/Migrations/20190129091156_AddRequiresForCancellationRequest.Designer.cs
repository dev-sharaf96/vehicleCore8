// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Tameenk.Cancellation.DAL;

namespace Tameenk.Cancellation.DAL.Migrations
{
    [DbContext(typeof(CancellationContext))]
    [Migration("20190129091156_AddRequiresForCancellationRequest")]
    partial class AddRequiresForCancellationRequest
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.4-rtm-31024")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Tameenk.Cancellation.DAL.Entities.BankCode", b =>
                {
                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DescriptionAr");

                    b.Property<string>("DescriptionEn");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Code");

                    b.ToTable("BankCodes");

                    b.HasData(
                        new { Code = "05", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "مصرف الإنماء", DescriptionEn = "Alinma Bank", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "10", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "البنك الأهلي التجاري", DescriptionEn = "The National Commercial Bank", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "15", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "بنك البلاد", DescriptionEn = "Bank AlBilad", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "20", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "بنك الرياض", DescriptionEn = "Riyad Bank", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "30", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "البنك العربي الوطني", DescriptionEn = "Arab National Bank", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "40", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "مجموعة سامبا المالية (سامبا)", DescriptionEn = "Samba Financial Group (Samba)", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "45", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "البنك السعودي البريطاني", DescriptionEn = "The Saudi British Bank (SABB)", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "50", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "البنك الأول", DescriptionEn = "Alawwal Bank", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "55", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "البنك السعودي الفرنسي", DescriptionEn = "Banque Saudi Fransi", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "60", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "بنك الجزيرة", DescriptionEn = "Bank AlJazira", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "65", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "البنك السعودي للاستثمار", DescriptionEn = "Saudi Investment Bank", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "80", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "مصرف الراجحي", DescriptionEn = "Al Rajhi Bank", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "71", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "بنك البحرين الوطني", DescriptionEn = "National Bank of Bahrain (NBB)", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "75", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "بنك الكويت الوطني", DescriptionEn = "National Bank of Kuwait (NBK)", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "76", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "بنك مسقط", DescriptionEn = "Muscat Bank", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "81", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "دويتشه بنك", DescriptionEn = "Deutsche Bank", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "82", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "بنك باكستان الوطني", DescriptionEn = "National Bank Of Pakistan (NBP)", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "83", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "ستيت بنك أوف إنديا", DescriptionEn = "State Bank of India(SBI)", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "84", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "بنك تي سي زراعات بانكاسي", DescriptionEn = "T.C.ZIRAAT BANKASI A.S.", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "85", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "بي إن بي باريباس", DescriptionEn = " Paribas BNP", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "86", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "جي بي مورقان تشيز إن أيه", DescriptionEn = "J.P. Morgan Chase N.A", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "90", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "بنك الخليج الدولي", DescriptionEn = "Gulf International Bank(GIB)", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = "95", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "بنك الإمارات دبي الوطني", DescriptionEn = "Emirates (NBD)", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("Tameenk.Cancellation.DAL.Entities.CancellationRequest", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CancelFromCompany");

                    b.Property<string>("Channel");

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("ErrorCode");

                    b.Property<string>("ErrorDescription");

                    b.Property<int>("InsuredId");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<int>("ReasonCode");

                    b.Property<string>("ReasonDescription");

                    b.Property<string>("ReferenceId");

                    b.Property<int?>("RegisterToCompany");

                    b.Property<Guid>("RequestId");

                    b.Property<string>("RequestStatus");

                    b.Property<string>("ServerIP");

                    b.Property<string>("UserAgent");

                    b.Property<string>("UserIP");

                    b.Property<int>("VehicleId");

                    b.Property<string>("VehicleIdType");

                    b.Property<int>("VehicleIdTypeCode");

                    b.HasKey("Id");

                    b.ToTable("CancellationRequests");
                });

            modelBuilder.Entity("Tameenk.Cancellation.DAL.Entities.ErrorCode", b =>
                {
                    b.Property<string>("Code")
                        .ValueGeneratedOnAdd();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("Description");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Text");

                    b.HasKey("Code");

                    b.ToTable("ErrorCodes");

                    b.HasData(
                        new { Code = "400", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Description = "The request was invalid or cannot be otherwise served. An accompanying error message will explain further.", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Text = "Bad Request" },
                        new { Code = "401", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Description = "Missing or incorrect authentication credentials.", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Text = "Unauthorized" },
                        new { Code = "600", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Description = "Unknown error, details to be provide by the insurance company.", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Text = "Unknown error " },
                        new { Code = "601", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Description = "Missing or incorrect data request.", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Text = "Incorrect Data" },
                        new { Code = "604", CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Description = "Data not found or Incorrect data.", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), Text = "Data Not Found" }
                    );
                });

            modelBuilder.Entity("Tameenk.Cancellation.DAL.Entities.InsuranceCompany", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("AccessToken");

                    b.Property<string>("CompanyName")
                        .IsRequired();

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("CreditNoteScheduleServiceUrl")
                        .IsRequired();

                    b.Property<string>("GetPolicyServiceUrl")
                        .IsRequired();

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("ModifiedDate");

                    b.Property<string>("Password")
                        .IsRequired();

                    b.Property<string>("PolicyCancellationServiceUrl")
                        .IsRequired();

                    b.Property<int?>("ServiceType");

                    b.Property<string>("UserName")
                        .IsRequired();

                    b.HasKey("Id");

                    b.ToTable("InsuranceCompanies");
                });

            modelBuilder.Entity("Tameenk.Cancellation.DAL.Entities.InsuranceType", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DescriptionAr");

                    b.Property<string>("DescriptionEn");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Code");

                    b.ToTable("InsuranceTypes");

                    b.HasData(
                        new { Code = 1, CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "تأمين مركبات طرف ثالث ( ضد الغير )", DescriptionEn = "Third-Party Vehicle Insurance", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = 2, CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "تأمين مركبات شامل", DescriptionEn = "Comprehensive Vehicle Insurance", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("Tameenk.Cancellation.DAL.Entities.Reason", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DescriptionAr");

                    b.Property<string>("DescriptionEn");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Code");

                    b.ToTable("Reasons");

                    b.HasData(
                        new { Code = 1, CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "إسقاط سجل المركبة", DescriptionEn = "The write-off of a motor vehicle’s register", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = 2, CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "إنتقال ملكية المركبة إلي مالك اّخر", DescriptionEn = "Transfer of ownership of a motor vehicle to another owner ", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = 3, CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "وجود وثيقة تأمين بديلة تغطى الفترة المتبقية من الوثيقة المزمع إلغاؤها", DescriptionEn = "The existence of an alternative Policy covers the remaining term of the insurance Policy to be cancelled", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) }
                    );
                });

            modelBuilder.Entity("Tameenk.Cancellation.DAL.Entities.ServiceRequestLog", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Channel")
                        .HasMaxLength(255);

                    b.Property<int?>("CompanyID");

                    b.Property<string>("CompanyName")
                        .HasMaxLength(255);

                    b.Property<DateTime?>("CreatedDate");

                    b.Property<string>("DriverNin");

                    b.Property<int?>("ErrorCode");

                    b.Property<string>("ErrorDescription");

                    b.Property<string>("Method")
                        .HasMaxLength(255);

                    b.Property<string>("ReferenceId");

                    b.Property<Guid?>("RequestId");

                    b.Property<string>("ServerIP")
                        .HasMaxLength(50);

                    b.Property<string>("ServiceErrorCode")
                        .HasMaxLength(50);

                    b.Property<string>("ServiceErrorDescription");

                    b.Property<string>("ServiceRequest");

                    b.Property<string>("ServiceResponse");

                    b.Property<double?>("ServiceResponseTimeInSeconds");

                    b.Property<string>("ServiceURL")
                        .HasMaxLength(255);

                    b.Property<Guid?>("UserID");

                    b.Property<string>("UserName")
                        .HasMaxLength(255);

                    b.Property<string>("VehicleId");

                    b.HasKey("Id");

                    b.ToTable("ServiceRequestLog");
                });

            modelBuilder.Entity("Tameenk.Cancellation.DAL.Entities.VehicleIDType", b =>
                {
                    b.Property<int>("Code")
                        .ValueGeneratedOnAdd()
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("CreatedDate");

                    b.Property<string>("DescriptionAr");

                    b.Property<string>("DescriptionEn");

                    b.Property<bool>("IsActive");

                    b.Property<DateTime>("ModifiedDate");

                    b.HasKey("Code");

                    b.ToTable("VehicleIDTypes");

                    b.HasData(
                        new { Code = 1, CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "الرقم التسلسلي", DescriptionEn = "Sequence Number", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) },
                        new { Code = 2, CreatedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified), DescriptionAr = "البطاقة الجمركية", DescriptionEn = "Custom Card ", IsActive = true, ModifiedDate = new DateTime(1, 1, 1, 0, 0, 0, 0, DateTimeKind.Unspecified) }
                    );
                });
#pragma warning restore 612, 618
        }
    }
}
