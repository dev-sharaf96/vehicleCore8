<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="أحمر" xml:space="preserve">
    <value>5</value>
  </data>
  <data name="أحمر غامق" xml:space="preserve">
    <value>7</value>
  </data>
  <data name="أحمر فاتح" xml:space="preserve">
    <value>6</value>
  </data>
  <data name="أرجواني" xml:space="preserve">
    <value>44</value>
  </data>
  <data name="ابيض" xml:space="preserve">
    <value>1</value>
  </data>
  <data name="اخضر" xml:space="preserve">
    <value>29</value>
  </data>
  <data name="اخضر ذهبي" xml:space="preserve">
    <value>35</value>
  </data>
  <data name="اخضر غامق" xml:space="preserve">
    <value>31</value>
  </data>
  <data name="اخضر فاتح" xml:space="preserve">
    <value>30</value>
  </data>
  <data name="ازرق" xml:space="preserve">
    <value>14</value>
  </data>
  <data name="ازرق سماوي" xml:space="preserve">
    <value>38</value>
  </data>
  <data name="ازرق غامق" xml:space="preserve">
    <value>16</value>
  </data>
  <data name="ازرق فاتح" xml:space="preserve">
    <value>15</value>
  </data>
  <data name="اسود" xml:space="preserve">
    <value>2</value>
  </data>
  <data name="اصفر" xml:space="preserve">
    <value>32</value>
  </data>
  <data name="اصفر غامق" xml:space="preserve">
    <value>34</value>
  </data>
  <data name="اصفر فاتح" xml:space="preserve">
    <value>33</value>
  </data>
  <data name="برتقالي" xml:space="preserve">
    <value>26</value>
  </data>
  <data name="برتقالي غامق" xml:space="preserve">
    <value>28</value>
  </data>
  <data name="برتقالي فاتح" xml:space="preserve">
    <value>27</value>
  </data>
  <data name="برونزي" xml:space="preserve">
    <value>46</value>
  </data>
  <data name="بنفسجي" xml:space="preserve">
    <value>23</value>
  </data>
  <data name="بنفسجي غامق" xml:space="preserve">
    <value>25</value>
  </data>
  <data name="بنفسجي فاتح" xml:space="preserve">
    <value>24</value>
  </data>
  <data name="بني" xml:space="preserve">
    <value>17</value>
  </data>
  <data name="بني غامق" xml:space="preserve">
    <value>19</value>
  </data>
  <data name="بني فاتح" xml:space="preserve">
    <value>18</value>
  </data>
  <data name="بيج" xml:space="preserve">
    <value>3</value>
  </data>
  <data name="بيج غامق" xml:space="preserve">
    <value>40</value>
  </data>
  <data name="بيج فاتح" xml:space="preserve">
    <value>41</value>
  </data>
  <data name="حليبي" xml:space="preserve">
    <value>45</value>
  </data>
  <data name="ذهبي" xml:space="preserve">
    <value>20</value>
  </data>
  <data name="ذهبي غامق" xml:space="preserve">
    <value>22</value>
  </data>
  <data name="ذهبي فاتح" xml:space="preserve">
    <value>21</value>
  </data>
  <data name="رصاصي" xml:space="preserve">
    <value>8</value>
  </data>
  <data name="رصاصي غامق" xml:space="preserve">
    <value>10</value>
  </data>
  <data name="رصاصي فاتح" xml:space="preserve">
    <value>9</value>
  </data>
  <data name="رمادي" xml:space="preserve">
    <value>36</value>
  </data>
  <data name="رملي" xml:space="preserve">
    <value>47</value>
  </data>
  <data name="زهري" xml:space="preserve">
    <value>48</value>
  </data>
  <data name="زيتوني" xml:space="preserve">
    <value>49</value>
  </data>
  <data name="زيعي" xml:space="preserve">
    <value>50</value>
  </data>
  <data name="سماوي" xml:space="preserve">
    <value>51</value>
  </data>
  <data name="صحراوي" xml:space="preserve">
    <value>56</value>
  </data>
  <data name="صدفي" xml:space="preserve">
    <value>42</value>
  </data>
  <data name="عسلي" xml:space="preserve">
    <value>53</value>
  </data>
  <data name="عنابي" xml:space="preserve">
    <value>54</value>
  </data>
  <data name="عنابي وذهبي" xml:space="preserve">
    <value>43</value>
  </data>
  <data name="عودي" xml:space="preserve">
    <value>55</value>
  </data>
  <data name="فستقي" xml:space="preserve">
    <value>57</value>
  </data>
  <data name="فضي" xml:space="preserve">
    <value>4</value>
  </data>
  <data name="كحلي" xml:space="preserve">
    <value>37</value>
  </data>
  <data name="لون الدوريات" xml:space="preserve">
    <value>39</value>
  </data>
  <data name="وردي" xml:space="preserve">
    <value>11</value>
  </data>
  <data name="وردي غامق" xml:space="preserve">
    <value>13</value>
  </data>
  <data name="وردي فاتح" xml:space="preserve">
    <value>12</value>
  </data>
</root>