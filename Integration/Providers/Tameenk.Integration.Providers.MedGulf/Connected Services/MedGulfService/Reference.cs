//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Tameenk.Integration.Providers.MedGulf.MedGulfService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(Namespace="https://aggregators.medgulf.com.sa/TameenK/", ConfigurationName="MedGulfService.TameenkSoap")]
    public interface TameenkSoap {
        
        [System.ServiceModel.OperationContractAttribute(Action="https://aggregators.medgulf.com.sa/TameenK/Quotes", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Quotes(string Username, string Password, string JsonRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://aggregators.medgulf.com.sa/TameenK/Quotes", ReplyAction="*")]
        System.Threading.Tasks.Task<string> QuotesAsync(string Username, string Password, string JsonRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://aggregators.medgulf.com.sa/TameenK/Policy", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string Policy(string Username, string Password, string JsonRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://aggregators.medgulf.com.sa/TameenK/Policy", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PolicyAsync(string Username, string Password, string JsonRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://aggregators.medgulf.com.sa/TameenK/PolicySchedule", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string PolicySchedule(string Username, string Password, string JsonRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://aggregators.medgulf.com.sa/TameenK/PolicySchedule", ReplyAction="*")]
        System.Threading.Tasks.Task<string> PolicyScheduleAsync(string Username, string Password, string JsonRequest);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://aggregators.medgulf.com.sa/TameenK/VehicleImagesDownload", ReplyAction="*")]
        [System.ServiceModel.XmlSerializerFormatAttribute(SupportFaults=true)]
        string VehicleImagesDownload(string Username, string Password, string ReferenceId, string PolicyNo);
        
        [System.ServiceModel.OperationContractAttribute(Action="https://aggregators.medgulf.com.sa/TameenK/VehicleImagesDownload", ReplyAction="*")]
        System.Threading.Tasks.Task<string> VehicleImagesDownloadAsync(string Username, string Password, string ReferenceId, string PolicyNo);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface TameenkSoapChannel : Tameenk.Integration.Providers.MedGulf.MedGulfService.TameenkSoap, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class TameenkSoapClient : System.ServiceModel.ClientBase<Tameenk.Integration.Providers.MedGulf.MedGulfService.TameenkSoap>, Tameenk.Integration.Providers.MedGulf.MedGulfService.TameenkSoap {
        
        public TameenkSoapClient() {
        }
        
        public TameenkSoapClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public TameenkSoapClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TameenkSoapClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public TameenkSoapClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string Quotes(string Username, string Password, string JsonRequest) {
            return base.Channel.Quotes(Username, Password, JsonRequest);
        }
        
        public System.Threading.Tasks.Task<string> QuotesAsync(string Username, string Password, string JsonRequest) {
            return base.Channel.QuotesAsync(Username, Password, JsonRequest);
        }
        
        public string Policy(string Username, string Password, string JsonRequest) {
            return base.Channel.Policy(Username, Password, JsonRequest);
        }
        
        public System.Threading.Tasks.Task<string> PolicyAsync(string Username, string Password, string JsonRequest) {
            return base.Channel.PolicyAsync(Username, Password, JsonRequest);
        }
        
        public string PolicySchedule(string Username, string Password, string JsonRequest) {
            return base.Channel.PolicySchedule(Username, Password, JsonRequest);
        }
        
        public System.Threading.Tasks.Task<string> PolicyScheduleAsync(string Username, string Password, string JsonRequest) {
            return base.Channel.PolicyScheduleAsync(Username, Password, JsonRequest);
        }
        
        public string VehicleImagesDownload(string Username, string Password, string ReferenceId, string PolicyNo) {
            return base.Channel.VehicleImagesDownload(Username, Password, ReferenceId, PolicyNo);
        }
        
        public System.Threading.Tasks.Task<string> VehicleImagesDownloadAsync(string Username, string Password, string ReferenceId, string PolicyNo) {
            return base.Channel.VehicleImagesDownloadAsync(Username, Password, ReferenceId, PolicyNo);
        }
    }
}
